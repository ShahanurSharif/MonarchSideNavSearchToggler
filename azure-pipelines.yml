trigger:
  tags:
    include:
      - 'v*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - script: npm ci
    displayName: 'Install dependencies'

  - script: |
      npx gulp build --ship
      npx gulp bundle --ship
    displayName: 'Build and bundle solution'

  - script: npx gulp package-solution --ship
    displayName: 'Package SPFx solution'

  - script: |
      npm install -g @pnp/cli-microsoft365
      sudo apt-get update && sudo apt-get install -y jq

      echo "Logging in with client secret..."
      m365 login --authType secret \
        --appId "$(app_id)" \
        --tenant "$(tenant_id)" \
        --secret "$(client_secret)"
      if [ $? -ne 0 ]; then
        echo "‚ùå M365 login failed!"
        exit 1
      fi

      # Hardcoded path to your .sppkg file
      PACKAGE_PATH="$(System.DefaultWorkingDirectory)/sharepoint/solution/monarch-sidenav.sppkg"
      APP_CATALOG_URL="https://monarch360demo.sharepoint.com/sites/appcatalog"

      echo "Uploading package to App Catalog..."
      m365 spo app add -p "$PACKAGE_PATH" --overwrite --appCatalogUrl "$APP_CATALOG_URL"
      if [ $? -ne 0 ]; then
        echo "‚ùå App upload failed!"
        exit 1
      fi

      echo "Retrieving App ID for deployment..."
      PACKAGE_NAME="monarch-sidenav.sppkg"
      APP_ID_DEPLOY=$(m365 spo app list --appCatalogUrl "$APP_CATALOG_URL" --output json | jq -r '.[] | select(.Name == "'$PACKAGE_NAME'") | .ID')
      if [ -z "$APP_ID_DEPLOY" ]; then
        echo "‚ùå Could not find App ID for deployment!"
        exit 1
      fi
      echo "‚úÖ Package App ID found: $APP_ID_DEPLOY"

      echo "Deploying SPFx package..."
      m365 spo app deploy --id "$APP_ID_DEPLOY" --appCatalogUrl "$APP_CATALOG_URL" --wait
      if [ $? -ne 0 ]; then
        echo "‚ùå App deployment failed!"
        exit 1
      fi

      echo "üéâ App deployed successfully!"
    displayName: 'Deploy SPFx App to SharePoint App Catalog'
    env:
      app_id: $(app_id)
      client_secret: $(client_secret)
      tenant_id: $(tenant_id)
