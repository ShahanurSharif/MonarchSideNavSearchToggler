trigger:
  tags:
    include:
      - 'v*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  appCatalogUrl: 'https://monarch360demo.sharepoint.com/sites/appcatalog'

steps:
  - checkout: self

  - script: echo "Starting SharePoint deployment pipeline..."
    displayName: 'Pipeline Start'

  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - script: npm ci
    displayName: 'Install dependencies'

  - script: |
      echo "Building solution..."
      npx gulp build --ship
      npx gulp bundle --ship
    displayName: 'Build and bundle'

  - script: |
      echo "Packaging solution..."
      npx gulp package-solution --ship
      echo "Package created successfully"
    displayName: 'Package solution'

  - script: |
      echo "Installing required tools..."
      npm install -g @pnp/cli-microsoft365
      sudo apt-get update && sudo apt-get install -y jq
      echo "Tools installed successfully"
    displayName: 'Install required tools'

  - script: |
      echo "Logging in to Microsoft 365..."
      m365 login --authType password --userName "$(M365_USERNAME)" --password "$(M365_PASSWORD)"
      echo "Login successful"
      
      echo "Checking for existing package file..."
      ls -la sharepoint/solution/
      
      echo "Adding app to catalog..."
      m365 spo app add -p "sharepoint/solution/monarch-sidenav.sppkg" --overwrite --appCatalogUrl "$(appCatalogUrl)"
      echo "App added to catalog"
      
      echo "Getting app ID for deployment..."
      echo "Listing apps in catalog..."
      m365 spo app list --appCatalogUrl "$(appCatalogUrl)" --output json > app_list.json
      echo "App list saved to app_list.json"
      
      APP_ID=$(jq -r '.[] | select(.Name == "monarch-sidenav.sppkg") | .ID' app_list.json)
      echo "App ID: $APP_ID"
      
      if [ -z "$APP_ID" ] || [ "$APP_ID" = "null" ]; then
        echo "Error: Could not find app ID for monarch-sidenav.sppkg"
        echo "Available apps:"
        jq -r '.[] | "Name: \(.Name), ID: \(.ID)"' app_list.json
        exit 1
      fi
      
      echo "Deploying app..."
      m365 spo app deploy --appId "$APP_ID" --appCatalogUrl "$(appCatalogUrl)" --scope tenant --wait
      echo "Deployment completed successfully!"
    displayName: 'Deploy to SharePoint App Catalog'
    env:
      M365_USERNAME: $(M365_USERNAME)
      M365_PASSWORD: $(M365_PASSWORD)
      appCatalogUrl: $(appCatalogUrl)

  - script: |
      echo "Deployment pipeline completed successfully!"
    displayName: 'Pipeline Complete'
