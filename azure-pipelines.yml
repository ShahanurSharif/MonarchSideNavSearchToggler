trigger:
  tags:
    include:
      - 'v*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  solutionFolder: '$(System.DefaultWorkingDirectory)'
  sppkgFile: 'monarch-sidenav.sppkg' # <-- Make sure this matches your built .sppkg file
  sppkgPath: '$(solutionFolder)/sharepoint/solution/$(sppkgFile)'
  appCatalogUrl: 'https://monarch360demo.sharepoint.com/sites/appcatalog'

steps:
  - checkout: self

  - script: echo "Pipeline started for Monarch SideNav"
    displayName: 'Start Pipeline'

  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - script: npm ci
    displayName: 'Install dependencies'

  - script: |
      npx gulp build --ship
      npx gulp bundle --ship
    displayName: 'Build and bundle solution'

  - script: npx gulp package-solution --ship
    displayName: 'Package SPFx solution'

  - script: |
      echo "Installing CLI for Microsoft 365 and jq..."
      npm install -g @pnp/cli-microsoft365
      sudo apt-get update
      sudo apt-get install -y jq
    displayName: 'Install CLI for Microsoft 365 and jq'

  - script: |
      echo "Logging in to Microsoft 365..."
      m365 login --authType password --userName "$(M365_USERNAME)" --password "$(M365_PASSWORD)"
      if [ $? -ne 0 ]; then
        echo "❌ M365 login failed!"
        exit 1
      fi

      echo "Setting SPO URL context..."
      m365 spo set --url "$(appCatalogUrl)"
      if [ $? -ne 0 ]; then
        echo "❌ Setting SPO URL failed!"
        exit 1
      fi

      echo "Checking for package file..."
      ls -lh $(sppkgPath)
      if [ ! -f "$(sppkgPath)" ]; then
        echo "❌ .sppkg file not found at $(sppkgPath)"
        exit 1
      fi

      echo "Uploading package to App Catalog..."
      m365 spo app add -p "$(sppkgPath)" --overwrite --appCatalogUrl "$(appCatalogUrl)"
      if [ $? -ne 0 ]; then
        echo "❌ App upload failed!"
        exit 1
      fi

      echo "Retrieving App ID from App Catalog..."
      APP_ID=$(m365 spo app list --appCatalogUrl "$(appCatalogUrl)" --output json | jq -r '.[] | select(.Name == "'$(sppkgFile)'") | .ID')
      if [ -z "$APP_ID" ]; then
        echo "❌ Could not find App ID in catalog!"
        exit 1
      fi
      echo "✅ App ID found: $APP_ID"

      echo "Deploying App..."
      m365 spo app deploy --id "$APP_ID" --appCatalogUrl "$(appCatalogUrl)" --wait
      if [ $? -ne 0 ]; then
        echo "❌ App deployment failed!"
        exit 1
      fi

      echo "🎉 App deployed successfully!"
    displayName: 'Deploy SPFx App to SharePoint App Catalog'
    env:
      M365_USERNAME: $(M365_USERNAME)
      M365_PASSWORD: $(M365_PASSWORD)
      sppkgPath: $(sppkgPath)
      sppkgFile: $(sppkgFile)
      appCatalogUrl: $(appCatalogUrl)
